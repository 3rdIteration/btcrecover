name: Termux CI Tests

on:
  schedule:
    - cron: "0 0 * * 6"
  pull_request:
    branches: [ master ]
  workflow_dispatch:

jobs:
  termux:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v3
      - name: Enable QEMU for ARM
        run: docker run --rm --privileged aptman/qus -s -- -p aarch64
      - name: Run tests inside Termux
        run: |
          docker run --rm --platform linux/arm64 --privileged \
            -v ${{ github.workspace }}:/src \
            termux/termux-docker:aarch64 \
            bash -lc "\
              yes | /entrypoint.sh pkg update -y && \
              /entrypoint.sh pkg install -y python git autoconf automake build-essential libtool pkg-config && \
              cd /src && \
              /entrypoint.sh pip install --upgrade pip && \
              /entrypoint.sh pip install -r requirements.txt && \
              python run-all-tests.py -vv\
            "

  termux-full:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v3
      - name: Enable QEMU for ARM
        run: docker run --rm --privileged aptman/qus -s -- -p aarch64
      - name: Run tests inside Termux (full requirements)
        run: |
          docker run --rm --platform linux/arm64 --privileged \
            -v ${{ github.workspace }}:/src \
            termux/termux-docker:aarch64 \
            bash -lc "\
              yes | /entrypoint.sh pkg update -y && \
              /entrypoint.sh pkg install -y python git autoconf automake build-essential libtool pkg-config && \
              cd /src && \
              /entrypoint.sh pip install --upgrade pip && \
              /entrypoint.sh pip install -r requirements-full.txt && \
              python run-all-tests.py -vv\
            "
